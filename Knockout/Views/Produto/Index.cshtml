
@{
    ViewBag.Title = "Knockout JS";
}

@section scripts{

    <style type="text/css">
        body {
            margin: 20px;
            font-family: "Arial", "Helventica", sans-serif;
        }

        label {
            width: 80px;
            display: inline-block;
        }

        button {
            display: inline-block;
            outline: none;
            cursor: pointer;
            text-align: center;
            text-decoration: none;
            padding: .4em 1.1em .4em;
            color: #fef4e9;
            border: solid 1px #006fb9;
        }

            button:hover {
                text-decoration: none;
                background: #282828;
                border: solid 1px #000;
            }

        table {
            padding-top: 1em;
        }

        thead, tfoot {
            font-weight: 600;
        }

        th, td {
            padding: .1em 5em;
            text-align: left;
        }

            td li, td ul {
                margin: 0;
                padding: 0;
            }

                td li::after {
                    content: ',';
                }
    </style>

    <script src="~/Scripts/knockout-3.5.0.debug.js"></script>
    <script src="~/Scripts/knockout-3.5.0.js"></script>

    <script type="text/javascript">

        function formatCurrency(pValue) {
            var valor = parseFloat(pValue).toFixed(2);
            return "R$ " + valor;
        }

        function ProdutoViewModel() {
            var self = this;

            self.Id = ko.observable();
            self.Categoria = ko.observable();
            self.Nome = ko.observable();
            self.Preco = ko.observable();

            var Produto = {
                Id: self.Id,
                Categoria: self.Categoria,
                Nome: self.Nome,
                Preco: self.Preco
            };

            self.Produto = ko.observable();
            self.Produtos = ko.observableArray();

            $.ajax({
                url: '@Url.Action("BuscarTodosProdutos", "Produto")',
                cache: false,
                type: 'GET',
                contentType: 'application/json;charset=utf-8',
                data: {},
                success: function (vRetorno) {
                    self.Produtos(vRetorno);
                }

            });

            self.Total = ko.computed(function () {
                var soma = 0;
                var vObjArr = self.Produtos();
                for (var i = 0; i < vObjArr.length; i++) {
                    soma += vObjArr[i].Preco;
                }
                return soma;
            });

            self.Cadastrar = function () {
                if (self.Nome == '' || self.Categoria == '' || self.Preco == '') {
                    alert('Todos os campos precisam ser preenchidos.');
                } else {
                    $.ajax({
                        url: '@Url.Action("InserirProduto", "Produto")',
                        cache:false,
                        type: 'POST',
                        contentType: 'application/json;charset=utf-8',
                        data: ko.toJSON(Produto),
                        success: function (vRetorno) {
                            self.Produtos.push(vRetorno);
                            self.Nome("");
                            self.Categoria("");
                            self.Preco("");
                        }
                    });
                }
            }

            self.Apagar = function (Produto) {
                if (confirm('Deseja realmente apagar o produto?')) {
                    $.ajax({
                        url: '@Url.Action("RemoverProduto", "Produto")',
                        cache: false,
                        type: 'GET',
                        contentType: 'application/json;charset=utf-8',
                        data: { pId: Produto.Id },
                        success: function (vRetorno) {
                            if (vRetorno.Status == "OK") {
                                alert("Removido com sucesso.");
                                self.Produtos.remove(Produto);
                                self.Nome("");
                                self.Categoria("");
                                self.Preco("");
                            } else {
                                alert("Problemas na remoção.");
                            }
                            
                        }

                    }).fail(function (xhr, textStatus, err) {
                        alert(err);
                    });
                }
            }

            self.Editar = function (Produto) {
                $('#Update').show();
                self.Produto(Produto);
            }

            self.Atualizar = function () {

                if (confirm('Deseja realmente atualizar o produto?')) {
                    var vProd = self.Produto();
                    $.ajax({
                        url: '@Url.Action("EditarProduto", "Produto")',
                        cache: false,
                        type: 'POST',
                        contentType: 'application/json;charset=utf-8',
                        data: ko.toJSON(vProd),
                        success: function (vRetorno) {
                            self.Produtos.removeAll();
                            self.Produtos(vRetorno); 
                            self.Produto("");
                            $('#Update').hide();
                            alert("ATUALIZADO COM SUCESSO");
                        }

                    }).fail(function (xhr, textStatus, err) {
                        alert(err);
                    });

                }
            }

            self.Reset = function () {
                self.Nome("");
                self.Categoria("");
                self.Preco("");
            }

            self.Cancel = function () {
                self.Produto(null);
            }
        }

        var viewModel = new ProdutoViewModel();
        ko.applyBindings(viewModel);




    </script>


}

    <div id="body">

        <h2>Anderson Diego - Studying - Knockout JS - ASP.NET MVC</h2>

        <h3>Lista de Produtos:</h3>

        <a href="#" onclick="$('#Add').show();" class="btn btn-primary">Adicionar Produto</a>
        <br />    <br />
        <table id="produtos1" data-bind="visible: Produtos().length > 0">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Name</th>
                    <th>Categoria</th>
                    <th>Preco</th>
                    <th>Ação</th>
                </tr>
            </thead>
            <tbody data-bind="foreach: Produtos">
                <tr>
                    <td data-bind="text: Id"></td>
                    <td data-bind="text: Nome"></td>
                    <td data-bind="text: Categoria"></td>
                    <td data-bind="text: formatCurrency(Preco)"></td>
                    <td>
                        <button data-bind="click: $root.Editar">Editar</button>
                        <button data-bind="click: $root.Apagar">Excluir</button>
                    </td>
                </tr>
            </tbody>
            <tfoot>
                <tr>
                    <td></td>
                    <td></td>
                    <td>Total :</td>
                    <td data-bind="text: formatCurrency($root.Total())"></td>
                    <td></td>
                </tr>
            </tfoot>
        </table>
        <br />
        <div style="border-top: solid 2px #282828; width: 430px; height: 10px"></div>

        <div id="Update" data-bind="if: Produto" style="display:none;">
            <div>
                <h2>Atualizar Produto:</h2>
            </div>
            <div>
                <label for="produtoId" data-bind="visible: false">ID</label>
                <label data-bind="text: Produto().Id, visible: false"></label>

            </div>
            <div>
                <label for="nome">Nome</label>
                <input data-bind="value: Produto().Nome" type="text" title="Nome" />
            </div>

            <div>
                <label for="categoria">Categoria</label>
                <input data-bind="value: Produto().Categoria" type="text" title="Categoria" />
            </div>

            <div>
                <label for="preco">Preço</label>
                <input data-bind="value: Produto().Preco" type="text" title="Preco" />

            </div>
            <br />
            <div>
                <button data-bind="click: $root.Atualizar">Atualizar</button>
                <button data-bind="click: $root.Cancel">Cancelar</button>

            </div>
        </div>

        <div id="Add" data-bind="ifnot: Produto()" style="display:none;">
            <div>
                <h2>Adicionar novo produto:</h2>
            </div>
            <div>
                <label for="name">Nome</label>
                <input data-bind="value: $root.Nome" type="text" title="Name" />
            </div>

            <div>
                <label for="category">Categoria</label>
                <input data-bind="value: $root.Categoria" type="text" title="Category" />
            </div>

            <div>
                <label for="price">Preço</label>
                <input data-bind="value: $root.Preco" type="text" title="Price" />
            </div>
            <br />
            <div>
                <button data-bind="click: $root.Cadastrar">Salvar</button>
                <button data-bind="click: $root.Reset; ">Cancelar</button>

            </div>
        </div>
    </div>

